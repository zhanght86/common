<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjdf.platform.mybatis.MessageMapper">
    <!--短信历史数据查询-->
    <select id="querySms" resultType="com.sjdf.platform.message.bean.SMSMessage" parameterType="map">
        SELECT t.* FROM
        (
        SELECT <include refid="smsField"/> FROM p_message_sms
        <include refid="query_where"/>
        UNION ALL
        SELECT <include refid="smsField"/> FROM p_message_history_sms
        <include refid="query_where"/>
        )t
        ORDER BY t.id DESC
        limit #{startIndex},#{pageSize}
    </select>

    <!--短信历史数据查询数目-->
    <select id="countSms" resultType="java.lang.Integer" parameterType="map">
        SELECT sum(t.c) FROM
        (
        SELECT count(*)AS c FROM (SELECT DISTINCT id FROM p_message_sms <include refid="query_where"/>)a
        UNION ALL
        SELECT count(*)AS c FROM (SELECT DISTINCT id FROM p_message_history_sms <include refid="query_where"/>)b
        )t
    </select>

    <!--邮件历史数据查询-->
    <select id="queryEmail" resultType="com.sjdf.platform.message.bean.EmailMessage" parameterType="map">
        SELECT t.* FROM
        (
        SELECT <include refid="emailField"/> FROM p_message_email
        <include refid="query_where"/>
        UNION ALL
        SELECT <include refid="emailField"/> FROM p_message_history_email
        <include refid="query_where"/>
        )t
        ORDER BY t.id DESC
        limit #{startIndex},#{pageSize}
    </select>

    <!--邮件历史数据查询数目-->
    <select id="countEmail" resultType="java.lang.Integer" parameterType="map">
        SELECT sum(t.c) FROM
        (
        SELECT count(*)AS c FROM (SELECT DISTINCT id FROM p_message_email <include refid="query_where"/>)a
        UNION ALL
        SELECT count(*)AS c FROM (SELECT DISTINCT id FROM p_message_history_email <include refid="query_where"/>)b
        )t
    </select>

    <!--短信历史数据查询-->
    <select id="getSms" resultType="com.sjdf.platform.message.bean.SMSMessage" parameterType="long">
        SELECT t.* FROM
        (
        SELECT <include refid="smsField"/> FROM p_message_sms WHERE id = #{idx}
        UNION ALL
        SELECT <include refid="smsField"/> FROM p_message_history_sms WHERE id = #{idx}
        )t
    </select>

    <!--邮件历史数据查询-->
    <select id="getEmail" resultType="com.sjdf.platform.message.bean.EmailMessage" parameterType="long">
        SELECT t.* FROM
        (
        SELECT <include refid="emailField"/> FROM p_message_email WHERE id = #{idx}
        UNION ALL
        SELECT <include refid="emailField"/> FROM p_message_history_email WHERE id = #{idx}
        )t
    </select>

    <sql id="smsField">
        id,company,systemType,userId,address,failAddress,content,send_status AS status,send_time AS sendTime,sendApiName,remark,createUser,createTime,updateUser,updateTime
    </sql>

    <sql id="emailField">
        id,company,systemType,userId,address,failAddress,content,send_status AS status,send_time AS sendTime,sendApiName,remark,createUser,createTime,updateUser,updateTime,m_title as title,ccAddress,bccAddress,m_group AS mailGroup,m_type AS mailType
    </sql>

    <sql id="query_where">
        <where>
            <if test="company != null and company != 0">
                company = #{company}
            </if>
            <if test="systemType != null and systemType != 0">
                AND systemType = #{systemType}
            </if>
            <if test="userId != null">
                AND userId = #{userId}
            </if>
            <if test="address != null">
                and address like "%"#{address}"%"
            </if>
            <if test="title != null">
                and m_title like "%"#{title}"%"
            </if>
            <if test="content != null">
                and content like "%"#{content}"%"
            </if>
            <if test="status != null and status != 0">
                AND send_status = #{status}
            </if>
            <if test="createTime != null">
                AND send_time >= #{createTime}
            </if>
            <if test="updateTime != null">
                AND send_time &lt;= #{updateTime}
            </if>
        </where>
    </sql>
</mapper>